version: '3.7'

services:

  users:
    build:
      context: ./services/users
      dockerfile: Dockerfile-prod
    expose:
      - 5000
    environment:
      - FLASK_ENV=production
      - APP_SETTINGS=project.config.ProductionConfig
      - DATABASE_URL=postgres://postgres:Kad97711@wareiq-users-prod.cvqssxsqruyc.us-east-1.rds.amazonaws.com:5432/users_prod  # new
      - DATABASE_TEST_URL=postgres://postgres:postgres@users-db:5432/users_test
      - SECRET_KEY=${SECRET_KEY}
    depends_on:  # new
      - users-db

  users-db:  # new
    build:
      context: ./services/users/project/db
      dockerfile: Dockerfile
    expose:
      - 5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  nginx:
    build:
      context: ./services/nginx
      dockerfile: Dockerfile-prod
    restart: always
    ports:
      - 80:80
    depends_on:
      - users

  core:
    build:
      context: ./services/core
      dockerfile: Dockerfile-prod
    expose:
      - 5000
    environment:
      - FLASK_ENV=production
      - APP_SETTINGS=project.config.ProductionConfig
      - USERS_SERVICE_URL=http://users:5000
      - SECRET_KEY=my_precious
      - DATABASE_URL=postgres://postgres:postgres@wareiq-core-prod.cvqssxsqruyc.us-east-1.rds.amazonaws.com:5432/core_prod
      - DATABASE_TEST_URL=postgres://postgres:postgres@core-db:5432/core_test  # new
    depends_on:
      - users
      - core-db  # new

  core-db:
    build:
      context: ./services/core/project/db
      dockerfile: Dockerfile
    ports:
      - 5437:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
